{"id":65,"date":"2013-02-07T22:20:04","date_gmt":"2013-02-07T21:20:04","guid":{"rendered":"http:\/\/insidecode.altervista.org\/?p=65"},"modified":"2013-02-20T22:17:29","modified_gmt":"2013-02-20T21:17:29","slug":"primo-esempio-il-bottone","status":"publish","type":"post","link":"https:\/\/insidecode.it\/primo-esempio-il-bottone\/","title":{"rendered":"Primo Esempio: Il bottone"},"content":{"rendered":"<p>In questo esempio voglio mostrarvi come collegare ed implementare nei vostri progetti un bottone:<\/p>\n<p>Per prima cosa diamo un&#8217;occhiata allo\u00a0<i>schema elettrico<\/i>: Il bottone presenta quattro estremit\u00e0 (<i>Pin<\/i>) connessi due a due da contatti interni al pulsante. Abbiamo in realt\u00e0, quindi, due contatti indipendenti che andremo a collegare. Nello schema elettrico questo corrisponde alla apertura e chiusura di un circuito: il passaggio dallo stato di quiete delle cariche, al passaggio di una corrente elettrica nel circuito. Quello che vogliamo fare \u00e8 gestire la variazione di potenziale elettrico avvertita dai pin digitali del nostro microcontrollore, attuata dalla pressione del nostro bottone.<\/p>\n<div align=\"center\"><img loading=\"lazy\" class=\"aligncenter\" style=\"margin-top: 20px; margin-bottom: 20px;\" title=\"Schema elettrico\" alt=\"\" src=\"https:\/\/i0.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_schematic.png?resize=480%2C270\" width=\"480\" height=\"270\" border=\"2px\" vspace=\"20\" data-recalc-dims=\"1\" \/><\/div>\n<div align=\"center\"><\/div>\n<p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\"><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\">Come potete vedere, oltre al bottone, nel circuito \u00e8 riportata una resistenza a massa tra il\u00a0<i>Digital Pin<\/i>e il bottone; questa resistenza \u00e8 chiamata &#8220;<i>resistenza in<b>\u00a0Pull-Down<\/b><\/i>&#8220;, ed \u00e8 necessaria al fine di mantenere lo stato logico\u00a0<i><b>LOW<\/b><\/i>\u00a0(basso) finch\u00e8 il bottone non \u00e8 premuto. Questo tipo di operazione \u00e8 necessaria nei circuiti logici al fine di mantenere lo stato logico voluto (Low nel caso di pull-down e HIGH nel caso di pull-up) nel caso in cui si voglia interfacciare un circuito aperto ad uno logico (come in questo caso), o nel caso in cui una periferica venga scollegata dal microcontrollore.<br \/>\nLa resistenza in pull-up\/down sostanzialmente applica una debole tensione al pin dove essa \u00e8 connessa.<\/span><\/span><\/p>\n<p>&nbsp;<\/p>\n<h3>Lato software:<\/h3>\n<p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\"><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\">Per quanto riguarda il software Arduino, ho scritto un software che riassuma una serie di<i><b>Interruzioni<\/b><\/i>\u00a0applicabili all&#8217;utilizzo del nostro bottone:<br \/>\nIl bottone attuer\u00e0 l&#8217;accensione di un led, stamper\u00e0 a schemo un testo tramite porta seriale e incrementer\u00e0 ad ogni pressione un contatore.<\/span><\/span><\/p>\n<p>In allegato il codice sorgente: Button.ino<br \/>\n(clicca per ingrandire)<\/p>\n<div align=\"center\"><a href=\"file:\/\/\/D:\/Documenti\/Lavoro\/Httrack\/templates\/insidecode.altervista.org\/img\/button_ide.jpg\" target=\"_blank\"><img title=\"Arduino button software\" alt=\"\" src=\"file:\/\/\/D:\/Documenti\/Lavoro\/Httrack\/templates\/insidecode.altervista.org\/img\/button_ide.jpg\" border=\"2px\" vspace=\"20\" \/><\/a><a href=\"https:\/\/i2.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_ide.jpg\"><img data-attachment-id=\"198\" data-permalink=\"https:\/\/insidecode.it\/primo-esempio-il-bottone\/button_ide\/\" data-orig-file=\"https:\/\/i2.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_ide.jpg?fit=1024%2C600&amp;ssl=1\" data-orig-size=\"1024,600\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}\" data-image-title=\"button_ide\" data-image-description=\"\" data-medium-file=\"https:\/\/i2.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_ide.jpg?fit=250%2C146&amp;ssl=1\" data-large-file=\"https:\/\/i2.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_ide.jpg?fit=700%2C410&amp;ssl=1\" loading=\"lazy\" class=\"alignnone  wp-image-198\" alt=\"button_ide\" src=\"https:\/\/i2.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_ide.jpg?resize=614%2C360\" width=\"614\" height=\"360\" srcset=\"https:\/\/i2.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_ide.jpg?w=1024&amp;ssl=1 1024w, https:\/\/i2.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_ide.jpg?resize=250%2C146&amp;ssl=1 250w, https:\/\/i2.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_ide.jpg?resize=700%2C410&amp;ssl=1 700w, https:\/\/i2.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_ide.jpg?resize=125%2C73&amp;ssl=1 125w, https:\/\/i2.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/button_ide.jpg?resize=220%2C128&amp;ssl=1 220w\" sizes=\"(max-width: 614px) 100vw, 614px\" data-recalc-dims=\"1\" \/><\/a><\/div>\n<p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\"><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\"><br \/>\nIniziamo dichiarando il pin al quale abbiamo collegato il bottone (nel nostro caso il\u00a0<b>pin digitale 4<\/b>) e il LED (nel nostro caso il\u00a0<b>pin digitale 3<\/b>)<br \/>\nCodice:<\/span><\/span><\/p>\n<pre>void setup() {\r\n  \/\/ initialize the LED pin as an output:\r\n  pinMode(ledPin, OUTPUT);      \r\n  \/\/ initialize the pushbutton pin as an input:\r\n  pinMode(buttonPin, INPUT);    \r\n Serial.begin(9600); \r\n}<\/pre>\n<p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\"><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\"><br \/>\nNel\u00a0<i>setup<\/i>\u00a0dichiariamo i pin in entrata e in uscita ed inizializziamo la porta seriale:<br \/>\nCodice:<\/span><\/span><\/p>\n<pre>void setup() {\r\n  \/\/ initialize the LED pin as an output:\r\n  pinMode(ledPin, OUTPUT);      \r\n  \/\/ initialize the pushbutton pin as an input:\r\n  pinMode(buttonPin, INPUT);    \r\n Serial.begin(9600); \r\n}<\/pre>\n<p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\"><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif;\"><br \/>\nNel\u00a0<i>loop<\/i>, ad ogni ciclo il microcontrollore controller\u00e0 lo stato del pin digitale al quale abbiamo assegnato il bottone in ingresso, se il bottone \u00e8 stato premuto allora tramite il comando\u00a0<i>digitalWrite<\/i>verr\u00e0 acceso il led, e tramite il comando\u00a0<i>Serial.print<\/i>\u00a0verr\u00e0 stampata la stringa &#8220;<i>Button<\/i>&#8220;.<br \/>\nInoltre verr\u00e0 incrementato il valore della variabile\u00a0<i>i<\/i>, e inseguito stampato a schemo.<br \/>\nQueste sono solo alcune delle possibilit\u00e0 d&#8217;uso del nostro pulsante;<br \/>\n<b>Considerate il bottone come una sorgente di interrupt da impartire al microcontrollore per svolgere qualsiasi tipo di compito.<\/b><\/span><\/span><\/p>\n<p>Codice:<\/p>\n<pre>void loop(){\r\n  \/\/ read the state of the pushbutton value:\r\n  buttonState = digitalRead(buttonPin);\r\n  \/\/ check if the pushbutton is pressed.\r\n  \/\/ if it is, the buttonState is HIGH:\r\n  if (buttonState == HIGH) {     \r\n    \/\/ turn LED on:    \r\n    digitalWrite(ledPin, HIGH); \r\n    \/\/ print some lines to serial port \r\n    Serial.print(\"Button\");\r\n    \/\/ increment variable i and display\r\n    Serial.println(i);\r\n    i++;\r\n    \/\/wait for 0.5 seconds\r\n    delay(500);\r\n  } \r\n  else {\r\n    \/\/ turn LED off:\r\n    digitalWrite(ledPin, LOW); \r\n  }\r\n}<\/pre>\n<p>&nbsp;<\/p>\n<p>Per qualunque chiarimento invito a lasciare un commento nel box sottostante \ud83d\ude42<\/p>\n","protected":false},"excerpt":{"rendered":"<p>In questo esempio voglio mostrarvi come collegare ed implementare nei vostri progetti un bottone: Per prima cosa diamo un&#8217;occhiata allo\u00a0schema elettrico: Il bottone presenta quattro estremit\u00e0 (Pin) connessi due a due da contatti interni al pulsante. Abbiamo in realt\u00e0, quindi, due contatti indipendenti che andremo a collegare. Nello schema elettrico questo corrisponde alla apertura e [&hellip;]<\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[2],"tags":[73,11,13,12],"aioseo_notices":[],"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_shortlink":"https:\/\/wp.me\/p3csTP-13","jetpack_sharing_enabled":true,"jetpack_likes_enabled":true,"jetpack-related-posts":[{"id":219,"url":"https:\/\/insidecode.it\/arduino-gameboy-cart-readerwriter\/","url_meta":{"origin":65,"position":0},"title":"Arduino GameBoy cart Reader\/Writer","date":"21 Febbraio 2013","format":false,"excerpt":"Introduzione: Recentemente, rispolverando la mia collezione di retro games Nintendo, ho notato con mio grande dispiacere che alcune cartucce di gioco (ferme da pi\u00f9 di dieci anni) risultavano completamente vuote, prive dei dati di gioco collezionati in et\u00e0 puerile. (all'interno delle cartucce di gioco \u00e8 presente una batteria tampone che\u2026","rel":"","context":"In &quot;Arduino&quot;","img":{"alt_text":"","src":"https:\/\/i1.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/02\/03022012094-700x525.jpg?resize=350%2C200","width":350,"height":200},"classes":[]},{"id":425,"url":"https:\/\/insidecode.it\/conferenza-gruppo-ars-electronika-updates\/","url_meta":{"origin":65,"position":1},"title":"Conferenza gruppo Ars Electronika - updates","date":"24 Aprile 2013","format":false,"excerpt":"Chi ha seguito il mio blog nelle ultime settimane sapr\u00e0 che domenica il gruppo Ars Electronika si \u00e9 esibito al Circolo della Soda a Civitavecchia presentando una conferenza e due performance dal vivo. Ci stiamo impegnando in questo giorni a raccogliere video e foto dell'evento, nonch\u00e9 a preparare una registrazione\u2026","rel":"","context":"In &quot;Arduino&quot;","img":{"alt_text":"","src":"","width":0,"height":0},"classes":[]},{"id":270,"url":"https:\/\/insidecode.it\/masterclass-tolta-2012-arduino-processing-csound-osc\/","url_meta":{"origin":65,"position":2},"title":"Masterclass Tolta 2012: Arduino, Processing, CSound, OSC","date":"2 Aprile 2013","format":false,"excerpt":"Arduino, Processing, Csound, OSC: un mix portentoso! Nell'agosto del 2012 ho partecipato a una Masterclass di composizione e nuove tecnologie organizzata e tenuta dal comune di Tolfa. Obiettivo di tale corso approfondire e studiare nuove possibilit\u00e0 compositive, in accordo con nuove tecnologie, interfacciando l'utente con il mondo del computer music.\u2026","rel":"","context":"In &quot;Arduino&quot;","img":{"alt_text":"","src":"https:\/\/i1.wp.com\/insidecode.it\/wp-content\/uploads\/2013\/04\/IMG_20121023_2118311.jpg?fit=1000%2C343&ssl=1&resize=350%2C200","width":350,"height":200},"classes":[]},{"id":603,"url":"https:\/\/insidecode.it\/homemade-gameboy-flashcart-prototypes\/","url_meta":{"origin":65,"position":3},"title":"Homemade GameBoy FlashCart prototypes","date":"21 Settembre 2013","format":false,"excerpt":"Dopo avervi presentato il mio GameBoy Cartridge Reader\/Writer, oggi vi mostrer\u00f2 un video dimostrativo di due prototipi di FlashCard realizzati da me per gameboy. Queste cartucce, una volta programmate con l'Arduino Cartridge Reader\/Writer, permettono di eseguire codice propetario e non (Homebrew) su un game boy reale; di fatto si rivelano\u2026","rel":"","context":"In &quot;Arduino&quot;","img":{"alt_text":"","src":"","width":0,"height":0},"classes":[]},{"id":499,"url":"https:\/\/insidecode.it\/olinuxino-development-boards\/","url_meta":{"origin":65,"position":4},"title":"OLinuXino - Development Boards","date":"18 Agosto 2013","format":false,"excerpt":"L'ultimo arrivato a casa InsideCode a far compagnia alla coppia di Arduino UNO e Arduino DUE \u00e8 una fiammante OlinuXino A13 wifi board della casa Bulgara Olimex. Questa Board supporta, oltre alla programmazione diretta Bare Metal (no OS), varie distribuzioni di linux come Ubuntu, Fedora e Debian ed il sistema\u2026","rel":"","context":"In &quot;Arduino&quot;","img":{"alt_text":"","src":"","width":0,"height":0},"classes":[]},{"id":500,"url":"https:\/\/insidecode.it\/sapienza-games-saga-bomberman-on-the-go\/","url_meta":{"origin":65,"position":5},"title":"Sapienza Games (SaGa) - BomberMan on the go!","date":"17 Agosto 2013","format":false,"excerpt":"Piazza la bomba e corri! SaGa \u00e8 un progetto svolto nell'ambito di un corso che ho seguito presso l'universit\u00e0 La Sapienza di Roma; l'obiettivo \u00e8 quello di sviluppare un videogioco interamente in Java, a partire dai men\u00f9, la grafica, i suoni, fino ai dettagli pi\u00f9 minuziosi del gameplay, corredato da\u2026","rel":"","context":"In &quot;Games&quot;","img":{"alt_text":"","src":"","width":0,"height":0},"classes":[]}],"_links":{"self":[{"href":"https:\/\/insidecode.it\/wp-json\/wp\/v2\/posts\/65"}],"collection":[{"href":"https:\/\/insidecode.it\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/insidecode.it\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/insidecode.it\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/insidecode.it\/wp-json\/wp\/v2\/comments?post=65"}],"version-history":[{"count":8,"href":"https:\/\/insidecode.it\/wp-json\/wp\/v2\/posts\/65\/revisions"}],"predecessor-version":[{"id":103,"href":"https:\/\/insidecode.it\/wp-json\/wp\/v2\/posts\/65\/revisions\/103"}],"wp:attachment":[{"href":"https:\/\/insidecode.it\/wp-json\/wp\/v2\/media?parent=65"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/insidecode.it\/wp-json\/wp\/v2\/categories?post=65"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/insidecode.it\/wp-json\/wp\/v2\/tags?post=65"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}